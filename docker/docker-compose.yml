version: '3.2'
services:
  elasticsearch:
    image: elasticsearch:5.6.12-alpine
    container_name: elasticsearch
    command: elasticsearch
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.name=playground
      - bootstrap.memory_lock=true
      - http.port=9200
      - http.cors.allow-origin="*"
      - http.cors.enabled=true
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
    ports:
     - "9200:9200"
     - "9300:9300"

  kibana:
    image: kibana:5.6.12
    container_name: kibana
    ports:
      - "5601:5601"
    links:
      - elasticsearch

  postgres:
    image: postgres:11.0-alpine
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=example
    volumes:
      - ./postgres-default-config/postgresql.conf:/usr/local/share/postgresql/postgresql.conf
      - ./postgres-default-config/CreateDB.sql:/docker-entrypoint-initdb.d/CreateDB.sql

  adminer:
    image: adminer:4.6.3
    container_name: adminer
    restart: always
    ports:
      - 18080:8080
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
      - ADMINER_DESIGN=pepa-linha
    links:
      - postgres

  kafka:
    image: landoop/fast-data-dev:2.0.0
    container_name: kafka
    ports:
      - 2181:2181
      - 3030:3030
      - 8081-8083:8081-8083
      - 9092:9092
    environment:
     - ADV_HOST=kafka
     - SAMPLEDATA=0
     - RUNTESTS=0
    links:
      - elasticsearch

  # contract-service-same-group-1:
  #   image: contract-service:latest
  #   container_name: contract-service-same-group-1
  #   ports:
  #     - 6000:6000
  #   environment:
  #     - CONSUMER_GROUP_ID=sameGroup
  #
  # contract-service-same-group-2:
  #   image: contract-service:latest
  #   container_name: contract-service-same-group-2
  #   ports:
  #     - 6001:6000
  #   environment:
  #     - CONSUMER_GROUP_ID=sameGroup
  #     - KAFKA_HOST=${HOSTNAME}
  #
  # contract-service-different-group:
  #   image: contract-service:latest
  #   container_name: contract-service-different-group
  #   ports:
  #     - 6002:6000
  #   environment:
  #     - CONSUMER_GROUP_ID=differentGroup
  #     - KAFKA_HOST=${HOSTNAME}
  #
  # contract-type-kstream:
  #   image: contract-type-kstream:latest
  #   container_name: contract-type-kstream
  #   environment:
  #     - KAFKA_HOST=${HOSTNAME}

  client-service:
    image: client-service:latest
    container_name: client-service
    ports:
      - 5000:80
    environment:
      - KAFKA_HOST=kafka
