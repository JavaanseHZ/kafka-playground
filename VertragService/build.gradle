buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.0.4.RELEASE')
        classpath('com.commercehub.gradle.plugin:gradle-avro-plugin:0.14.1')
        classpath('com.bmuschko:gradle-docker-plugin:3.6.2')
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.commercehub.gradle.plugin.avro'
apply plugin: 'com.bmuschko.docker-java-application'

repositories {
    mavenCentral()
    jcenter()
    maven{ url = 'http://packages.confluent.io/maven/' }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.h2database:h2')
    compile('org.springframework.kafka:spring-kafka')
    compile('org.apache.avro:avro:1.8.2')
    compile('io.confluent:kafka-avro-serializer:5.0.0')
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    source('src/avro/schema')
    outputDir = file('src/main/avro')
}

mainClassName = 'de.vertrag.VertragSpringApplication'

docker {
    javaApplication {
        baseImage = 'openjdk:8-alpine'
        tag = 'vertrag-service:latest'
        ports = [9000, 6000]
    }
}

dockerDistTar {
    environmentVariable 'JAVA_OPTS', '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap'
}