// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.7.7.5
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace de.client.kafkaevent.duplicates
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	public partial class ClientDuplicatesFound : ISpecificRecord
	{
		public static Schema _SCHEMA = Schema.Parse(@"{""type"":""record"",""name"":""ClientDuplicatesFound"",""namespace"":""de.client.kafkaevent.duplicates"",""fields"":[{""name"":""id"",""type"":""int""},{""name"":""ts"",""type"":""long""},{""name"":""oldclientid"",""default"":null,""type"":[""null"",""string""]},{""name"":""newclientid"",""default"":null,""type"":[""null"",""string""]}],""connect.name"":""de.client.duplicates.ClientDuplicatesFound""}");
		private int _id;
		private long _ts;
		private string _oldclientid;
		private string _newclientid;
		public virtual Schema Schema
		{
			get
			{
				return ClientDuplicatesFound._SCHEMA;
			}
		}
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				this._id = value;
			}
		}
		public long ts
		{
			get
			{
				return this._ts;
			}
			set
			{
				this._ts = value;
			}
		}
		public string oldclientid
		{
			get
			{
				return this._oldclientid;
			}
			set
			{
				this._oldclientid = value;
			}
		}
		public string newclientid
		{
			get
			{
				return this._newclientid;
			}
			set
			{
				this._newclientid = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.id;
			case 1: return this.ts;
			case 2: return this.oldclientid;
			case 3: return this.newclientid;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.id = (System.Int32)fieldValue; break;
			case 1: this.ts = (System.Int64)fieldValue; break;
			case 2: this.oldclientid = (System.String)fieldValue; break;
			case 3: this.newclientid = (System.String)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
